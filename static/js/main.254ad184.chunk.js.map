{"version":3,"sources":["edit_pencil.png","Item.js","List.js","AddTask.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","className","type","id","checked","isCompleted","onChange","e","onItemChange","target","htmlFor","value","description","src","Edit","height","width","alt","onClick","onButtonClick","passID","List","todo","map","item","AddTask","useState","setDescription","placeholder","currentTarget","onSubmit","Alert","newDesc","setNewDesc","onClose","onOK","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","collectionName","App","query","collection","useCollection","isVisible","setVisibility","showAlert","setShowAlert","storeID","setStoreID","data","toggleModal","docs","doc","itemID","forEach","delete","filter","field","update","generateUniqueID","set","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.254ad184.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/edit_pencil.eea4cb1a.png\";","import './Item.css';\nimport Edit from \"./edit_pencil.png\"\n\nfunction Item(props) {\n    return (<div className={\"item\"}>\n        <input type={\"checkbox\"} className={\"checkbox\"} id={props.id} checked={props.isCompleted}\n               onChange={(e) => props.onItemChange(props.id, \"isCompleted\", e.target.checked)}/>\n        <label htmlFor={props.id} className=\"label\" value={props.description}>{props.description}</label>\n        <button><img src={Edit} height={\"25\"} width={\"25\"} alt={\"edit-icon\"} className={\"edit\"} onClick={() => {\n            props.onButtonClick();\n            props.passID(props.id);\n        }}/></button>\n\n    </div>);\n}\n\nexport default Item;","import './List.css'\nimport Item from './Item'\n\nfunction List(props) {\n    return (<div className={\"list\"}>\n            {props.todo.map(item =>\n                <Item key={item.id} id={item.id} description={item.description} isCompleted={item.isCompleted}\n                      onItemChange={props.onItemChange} onButtonClick={() => props.onButtonClick()}\n                      passID={(value) => props.passID(value)}/>)}\n        </div>\n    );\n}\n\nexport default List;","import \"./App.css\"\nimport {useState} from \"react\";\n\n\nexport default function AddTask(props) {\n    const [description, setDescription] = useState('');\n\n    function handleOnChange(value) {\n        setDescription(value);\n    }\n\n    return (\n        <div id=\"list\">\n            <input type=\"text\" id=\"task-description\" placeholder=\"task description\"\n                   onChange={(e) => handleOnChange(e.currentTarget.value)}/>\n            <input className={\"button\"} type=\"submit\" id=\"submit-task\" value=\"add task\"\n                   onClick={() => props.onSubmit(description)\n                   }/>\n        </div>\n    );\n};","import {useState} from \"react\";\n\nfunction Alert(props) {\n    const [newDesc, setNewDesc] = useState(\"\");\n\n    function handleOnChange(value) {\n        setNewDesc(value);\n    }\n\n    return <div className={\"backdrop\"}>\n        <div className=\"modal\">\n            Enter a new name for your item:\n            <div className={\"text\"}>\n                <input type={\"text\"} placeholder={\"task description\"}\n                       onChange={(e) => handleOnChange(e.currentTarget.value)}/>\n            </div>\n\n            <div className=\"alert-buttons\">\n                <button className={\"alert-button alert-cancel\"} type={\"button\"}\n                        onClick={props.onClose}>\n                    Cancel\n                </button>\n                <button className={\"alert-button alert-ok\"} type={\"button\"}\n                        onClick={() => {\n                            props.onClose();\n                            props.onOK(\"description\", newDesc);\n                        }}>\n                    OK\n                </button>\n            </div>\n        </div>\n    </div>\n}\n\nexport default Alert;","import List from './List'\nimport './App.css';\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport AddTask from \"./AddTask\";\nimport Alert from \"./Alert\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDcjlwvBtxAl8BKu_8evho99ks_6MBiWZo\",\n    authDomain: \"nskr-124lab4.firebaseapp.com\",\n    projectId: \"nskr-124lab4\",\n    storageBucket: \"nskr-124lab4.appspot.com\",\n    messagingSenderId: \"613050589081\",\n    appId: \"1:613050589081:web:d234d16f271e4ebe1ffd08\",\n    measurementId: \"G-6XSHMJM1HG\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nconst collectionName = \"List\";\nfunction App(props) {\n    const query = db.collection(collectionName);\n    const [value, loading, error] = useCollection(query);\n    const [isVisible, setVisibility] = useState(true);\n    const [showAlert, setShowAlert] = useState(false);\n    const [storeID, setStoreID] = useState(\"\");\n\n    let data = null;\n    if (value) {\n        data = value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n    function addData(description) {\n        const item = {\n            id: generateUniqueID(),\n            description: description,\n            isCompleted: false,\n        };\n        const docRef = query.doc(item.id);\n        docRef.set(item);\n    }\n\n    function handleItemChange(itemID, field, value) {\n        const doc = db.collection(collectionName).doc(itemID);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    function handleEditItem(field, value) {\n        const doc = db.collection(collectionName).doc(storeID);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    function handleDelete(itemID) {\n        data.forEach((item) => item.isCompleted && db.collection(collectionName).doc(item.id).delete());\n    }\n\n    function toggleModal() {\n        setShowAlert(!showAlert);\n    }\n\n    function changeID(itemID) {\n        setStoreID(itemID);\n    }\n\n    return (\n        <div className={\"todo\"}>\n            <div>\n                <h1>TO-DO LIST</h1>\n\n                <div className={isVisible ? \"visible\" : null}>\n                    <button className={\"button\"} type={\"button\"} onClick={() => {\n                        setVisibility(!isVisible);\n                    }}>{isVisible ? \"Hide Completed\" : \"Show Completed\"}</button>\n                    <button className={\"button\"} type={\"button\"} onClick={handleDelete}>Delete Completed</button>\n                </div>\n\n                {data && <List todo={isVisible ? data : data.filter(item => !(item.isCompleted))}\n                      onItemChange={handleItemChange} onButtonClick={toggleModal} passID={changeID}></List>}\n                <AddTask data={data} onSubmit={addData}/>\n            </div>\n            {showAlert && <Alert onClose={toggleModal} onOK={handleEditItem}/>}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}