{"version":3,"sources":["edit_pencil.png","Item.js","List.js","AddTask.js","Alert.js","TaskList.js","AddCategory.js","trash_can.png","ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","className","priority","type","id","checked","isCompleted","onChange","e","onItemChange","target","htmlFor","value","description","onClick","onButtonClick","onPassID","src","Edit","height","width","alt","List","todo","map","item","date","creationDate","AddTask","useState","setDescription","setPriority","placeholder","currentTarget","onSubmit","Alert","newDesc","setNewDesc","tabIndex","onClose","onOK","TaskList","task","db","collection","doc","sortVal","setSortVal","useCollection","orderBy","isVisible","setVisibility","selectedTaskId","setSelectedTaskId","data","docs","taskExists","selectedTask","filter","length","goBack","forEach","delete","generateUniqueID","Date","now","set","itemID","field","update","toggleModal","console","log","showAlert","AddCategory","category","setCategory","ListItem","listName","onClickItem","setAlertId","handleDeleteList","Delete","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","collectionName","App","listExists","query","listId","setListId","page","setPage","setShowAlert","alertId","changeList","list","modalType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAAe,G,YAAA,IAA0B,yC,QCyB1BA,MAtBf,SAAcC,GACV,OACI,qBAAKC,UAAW,OAAhB,SACI,sBAAKA,UAA8B,MAAnBD,EAAME,SAAmB,OAChB,MAAnBF,EAAME,SAAmB,SACrB,MAFV,UAGI,uBAAOC,KAAM,WAAYF,UAAW,WAAYG,GAAIJ,EAAMI,GAAIC,QAASL,EAAMM,YACtEC,SAAU,SAACC,GAAD,OAAOR,EAAMS,aAAaT,EAAMI,GAAI,cAAeI,EAAEE,OAAOL,YAC7E,uBAAOM,QAASX,EAAMI,GAAIH,UAAU,QAAQW,MAAOZ,EAAMa,YAAzD,SAAuEb,EAAMa,cAC7E,wBAAQZ,UAAW,aAAc,aAAY,qCAAsCa,QAAS,WACxFd,EAAMe,gBACNf,EAAMgB,SAAShB,EAAMI,KAFzB,SAGG,qBAAKa,IAAKC,EACLC,OAAQ,KACRC,MAAO,KACPC,IAAK,YACLpB,UAAW,iBCLpBqB,MAXf,SAActB,GACV,OAAQ,qBAAKC,UAAW,OAAhB,SACCD,EAAMuB,KAAKC,KAAI,SAAAC,GAAI,OAChB,cAAC,EAAD,CAAoBrB,GAAIqB,EAAKrB,GAAIS,YAAaY,EAAKZ,YAAaP,YAAamB,EAAKnB,YAC5EoB,KAAMD,EAAKE,aAAczB,SAAUuB,EAAKvB,SAAUO,aAAcT,EAAMS,aACtEM,cAAef,EAAMe,cACrBC,SAAUhB,EAAMgB,UAHXS,EAAKrB,U,gBCFjB,SAASwB,EAAQ5B,GAC5B,MAAsC6B,mBAAS,IAA/C,mBAAOhB,EAAP,KAAoBiB,EAApB,KACA,EAAgCD,mBAAS,KAAzC,mBAAO3B,EAAP,KAAiB6B,EAAjB,KAEA,OACI,sBAAK9B,UAAW,SAAUG,GAAG,OAA7B,UACI,uBAAOD,KAAK,OAAOC,GAAG,mBAAmBH,UAAW,YAAa+B,YAAY,mBAAmBpB,MAAOC,EAChG,aAAY,uCACZN,SAAU,SAACC,GAAD,OACNsB,EAAetB,EAAEyB,cAAcrB,UAC1C,yBAAQR,GAAG,WAAWG,SAAU,SAACC,GAAD,OAAOuB,EAAYvB,EAAEyB,cAAcrB,QAAnE,UACI,wBAAQA,MAAO,EAAG,aAAY,gBAA9B,kBACA,wBAAQA,MAAO,EAAG,aAAY,kBAA9B,oBACA,wBAAQA,MAAO,EAAG,aAAY,eAA9B,oBAEJ,uBAAOX,UAAW,SAAUE,KAAK,SAASC,GAAG,cAAcQ,MAAM,WAC1D,aAAY,uCACZE,QAAS,WAAOd,EAAMkC,SAASrB,EAAaX,GACxC4B,EAAe,U,yBCyCvBK,MA5Df,SAAenC,GACX,MAA8B6B,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAgCR,mBAAS,KAAzC,mBAAO3B,EAAP,KAAiB6B,EAAjB,KAEA,OACI,sBAAK9B,UAAW,WAAhB,UACqB,SAAfD,EAAMG,MACJ,sBAAKF,UAAU,QAAf,4CAEI,sBAAKA,UAAW,cAAhB,UACI,uBAAOE,KAAM,OAAQmC,SAAU,EAAGrC,UAAW,oBAAqB+B,YAAa,wBACxE,aAAY,sBACZzB,SAAU,SAACC,GAAD,OAAO6B,EAAW7B,EAAEyB,cAAcrB,UACnD,yBAAQX,UAAW,SAAUM,SAAU,SAACC,GAAD,OAAOuB,EAAYvB,EAAEyB,cAAcrB,QAA1E,UACI,wBAAQA,MAAO,EAAG,aAAY,gBAA9B,kBACA,wBAAQA,MAAO,EAAG,aAAY,kBAA9B,oBACA,wBAAQA,MAAO,EAAG,aAAY,eAA9B,uBAIR,sBAAKX,UAAU,gBAAf,UACI,wBAAQA,UAAW,eAAgBE,KAAM,SACjCW,QAASd,EAAMuC,QADvB,oBAIA,wBAAQtC,UAAW,eAAgBE,KAAM,SACjCW,QAAS,WACLd,EAAMuC,UACNvC,EAAMwC,KAAKJ,EAASlC,IAHhC,sBASK,SAAfF,EAAMG,MACR,sBAAKF,UAAU,QAAf,4CAEI,qBAAKA,UAAW,cAAhB,SACI,uBAAOE,KAAM,OAAQmC,SAAU,EAAGrC,UAAW,oBAAqB+B,YAAa,wBACxE,aAAY,iCACZzB,SAAU,SAACC,GAAD,OAAO6B,EAAW7B,EAAEyB,cAAcrB,YAGvD,sBAAKX,UAAU,gBAAf,UACI,wBAAQA,UAAW,eAAgBE,KAAM,SACjCW,QAASd,EAAMuC,QADvB,oBAIA,wBAAQtC,UAAW,eAAgBE,KAAM,SACjCW,QAAS,WACLd,EAAMuC,UACNvC,EAAMwC,KAAKJ,EAASpC,EAAMI,KAHtC,0BCmDLqC,MA7Ff,SAAkBzC,GACd,IACM0C,EADK1C,EAAM2C,GACDC,WAJG,QAIwBC,IAAI7C,EAAMI,IAAIwC,WAAW5C,EAAMI,IAG1E,EAA8ByB,mBAAS,YAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KACA,EAAgCC,YAAcN,EAAKO,QAAQH,EAAS,QAApE,mBAAOlC,EAAP,KACA,GADA,UACmCiB,oBAAS,IAA5C,mBAAOqB,EAAP,KAAkBC,EAAlB,KACA,EAA4CtB,mBAAS,IAArD,mBAAOuB,EAAP,KAAuBC,EAAvB,KAEIC,EAAO,GACP1C,IACA0C,EAAO1C,EAAM2C,KAAK/B,KAAI,SAACqB,GACnB,OAAO,eAAIA,EAAIS,YAGvB,IACIE,EADAC,EAAeH,EAAKI,QAAO,SAAChB,GAAD,OAAUA,EAAKtC,KAAOgD,KA+CrD,OA5CII,GADAJ,GAA0C,IAAxBK,EAAaE,OA8C/B,gCACI,gCACI,wBAAQ1D,UAAW,SAAUa,QAASd,EAAM4D,OAAQ,aAAY,kDAAhE,kBACA,sBAAK3D,UAAWiD,EAAY,UAAY,KAAxC,UACKI,EAAKI,QAAO,SAACjC,GAAD,OAAUA,EAAKnB,eAAaqD,OAAS,EAC9C,wBAAQ1D,UAAW,SAAUE,KAAM,SAC3BW,QAAS,WAAOqC,GAAeD,IADvC,SAEIA,EAAY,iBAAmB,mBAA6B,KACnEA,GAAaI,EAAKI,QAAO,SAACjC,GAAD,OAAUA,EAAKnB,eAAaqD,OAAS,EAC3D,wBAAQ1D,UAAW,SAAUE,KAAM,SAAUW,QAnBjE,WACIwC,EAAKO,SAAQ,SAACpC,GAAD,OAAUA,EAAKnB,aAAeoC,EAAKG,IAAIpB,EAAKrB,IAAI0D,aAkB7C,8BACyB,QAEjC,sBAAK7D,UAAW,UAAhB,UACI,uBAAOG,GAAG,OAAOO,QAAS,UAA1B,qBACA,yBAAQP,GAAI,UAAWG,SAAU,SAACC,GAAD,OAAOuC,EAAWvC,EAAEyB,cAAcrB,QAAnE,UACI,wBAAQA,MAAO,WAAY,aAAY,mBAAvC,sBACA,wBAAQA,MAAO,cAAe,aAAY,eAA1C,kBACA,wBAAQA,MAAO,eAAgB,aAAY,wBAA3C,iCAGR,cAACgB,EAAD,CAAS0B,KAAMA,EAAMpB,SA5DjC,SAAiBrB,EAAaX,GAC1B,IAAMuB,EAAO,CACTrB,GAAI2D,cACJlD,YAAaA,EACbP,aAAa,EACbqB,aAAcqC,KAAKC,MACnB/D,SAAUA,GAECwC,EAAKG,IAAIpB,EAAKrB,IACtB8D,IAAIzC,MAoDF6B,GAAQ,cAAC,EAAD,CAAM/B,KAAM2B,EAAYI,EAAOA,EAAKI,QAAO,SAAAjC,GAAI,OAAMA,EAAKnB,eACpDG,aAjD3B,SAA0B0D,EAAQC,EAAOxD,GACzB8B,EAAKG,IAAIsB,GACjBE,OAAJ,eACKD,EAAQxD,KA8C0CG,cAAef,EAAMsE,YAAatD,SA5B7F,SAAoBmD,GAChBI,QAAQC,IAAIL,GACZd,EAAkBc,SA4BbnE,EAAMyE,WAAajB,GAAc,cAAC,EAAD,CAAOrD,KAAM,OAAQuC,KAAMe,EAAclB,QAASvC,EAAMsE,YAAa9B,KA3C/G,SAAwB3B,EAAaX,GACrBwC,EAAKG,IAAIO,GACjBiB,OAAO,CACPxD,YAAaA,EACbX,SAAUA,IAEdqE,QAAQC,IAAI,kCC1CLE,MAbf,SAAqB1E,GACjB,MAAgC6B,mBAAS,IAAzC,mBAAO8C,EAAP,KAAiBC,EAAjB,KAEA,OACI,sBAAK3E,UAAW,SAAUG,GAAI,OAA9B,UACI,uBAAOA,GAAG,OAAV,+BACA,uBAAOD,KAAK,OAAOC,GAAG,mBAAmBH,UAAW,YAAa+B,YAAY,iBAAiB,aAAY,iCAAkCpB,MAAO+D,EAC5IpE,SAAU,SAACC,GAAD,OAAOoE,EAAYpE,EAAEyB,cAAcrB,UACpD,uBAAOX,UAAW,SAAUE,KAAM,SAAUS,MAAO,WAAY,aAAY,kBAAmBE,QAAS,WAAOd,EAAMkC,SAASyC,GAAWC,EAAY,W,QCbjJ,MAA0B,sCC4B1BC,MAtBf,SAAkB7E,GAId,OAFAuE,QAAQC,IAAI,2BAGR,sBAAKvE,UAAW,OAAhB,UACI,wBAAQA,UAAW,aAAcU,QAASX,EAAMI,GAAIQ,MAAOZ,EAAM8E,SACzD,aAAY9E,EAAM8E,SAAW,iCAC9BhE,QAAS,kBAAMd,EAAM+E,YAAY/E,EAAM8E,SAAU9E,EAAMI,KAF9D,SAEoEJ,EAAM8E,WAC1E,wBAAQ7E,UAAW,aAAc,aAAY,sDACrCa,QAAS,WAAOd,EAAMgF,WAAWhF,EAAMI,IAAKJ,EAAMsE,eAD1D,SAC0E,qBACtErD,IAAKC,EAAMC,OAAQ,KAAMC,MAAO,KAAMC,IAAK,YAAapB,UAAW,WACvE,wBAAQA,UAAW,eAAgBG,GAAIJ,EAAMI,GAAI,aAAY,yCACrDU,QAAS,kBAAMd,EAAMiF,iBAAiBjF,EAAMI,KADpD,SACyD,qBAAKa,IAAKiE,EAAQ/D,OAAQ,KAAMC,MAAO,KAClCC,IAAK,cAAepB,UAAW,eCKzGkF,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInB,IAAMhD,EAAKwC,IAASS,YAEdC,EAAiB,OAyFRC,MAjFf,WACI,IAcIC,EAdEC,EAAQrD,EAAGC,WAAWiD,GAC5B,EAAgC7C,YAAcgD,GAA9C,mBAAOpF,EAAP,KACA,GADA,UAC4BiB,mBAAS,KAArC,mBAAOoE,EAAP,KAAeC,EAAf,KACA,EAAwBrE,mBAAS,QAAjC,mBAAOsE,EAAP,KAAaC,EAAb,KACA,EAAkCvE,oBAAS,GAA3C,mBAAO4C,EAAP,KAAkB4B,EAAlB,KACA,EAA8BxE,mBAAS,MAAvC,mBAAOyE,EAAP,KAAgBtB,EAAhB,KAEI1B,EAAO,GA8BX,SAAS2B,EAAiB7E,GACvBuC,EAAGC,WAAWiD,GAAgBhD,IAAIzC,GAAI0D,SAGzC,SAASyC,EAAWzB,EAAU1E,GAC1B8F,EAAU9F,GACVgG,EAAQtB,GAIZ,SAASR,IACL+B,GAAc5B,GAGlB,OA3CI7D,IACA0C,EAAO1C,EAAM2C,KAAK/B,KAAI,SAACqB,GACnB,OAAO,eAAIA,EAAIS,YAMnByC,GADAO,GAAiE,IAAtDhD,EAAKI,QAAO,SAAChB,GAAD,OAAUA,EAAKtC,KAAOkG,KAAS3C,OAqCtD,sBAAK1D,UAAW,OAAhB,UAEc,SAATkG,EACG,gCACI,4CACA,cAAC,EAAD,CAAajE,SApC7B,SAAiBsE,GACb,IAAM/E,EAAO,CACTrB,GAAI2D,cACJe,SAAU0B,GAECR,EAAMnD,IAAIpB,EAAKrB,IACvB8D,IAAIzC,MA+BE6B,EAAK9B,KAAI,SAAAC,GAAI,OACV,8BACI,cAAC,EAAD,CAAUqD,SAAUrD,EAAKqD,SAAUC,YAAawB,EACtCtB,iBAAkBA,EAAkBX,YAAaA,EACjDlE,GAAIqB,EAAKrB,GAAIqE,UAAWA,EACxBO,WAAYA,YAMlC,gCACI,6BAAKmB,IACL,cAAC,EAAD,CAAUrB,SAAUqB,EAAMxD,GAAIA,EAAIiB,OAAQ,kBAAMwC,EAAQ,SAAShG,GAAI6F,EACzD3B,YAAaA,EAAamC,UAAW,OAAQhC,UAAWA,OAGlE,SAAT0B,GAAmB1B,GAAasB,GAAc,cAAC,EAAD,CAAOxD,QAAS+B,EAAa9B,KA7CpF,SAAwBgE,EAAMpG,GACduC,EAAGC,WAAWiD,GAAgBhD,IAAIzC,GAC1CiE,OAAO,CACPS,SAAU0B,KA0CwFrG,KAAM,OAAQC,GAAIkG,QCpGjHI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0b42ee5f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/edit_pencil.eea4cb1a.png\";","import './Item.css';\nimport Edit from \"./edit_pencil.png\"\n\nfunction Item(props) {\n    return (\n        <div className={\"item\"}>\n            <div className={props.priority === \"1\" ? \"high\"\n                : props.priority === \"2\" ? \"medium\"\n                    : \"low\"}>\n                <input type={\"checkbox\"} className={\"checkbox\"} id={props.id} checked={props.isCompleted}\n                       onChange={(e) => props.onItemChange(props.id, \"isCompleted\", e.target.checked)}/>\n                <label htmlFor={props.id} className=\"label\" value={props.description}>{props.description}</label>\n                <button className={\"editButton\"} aria-label={\"Edit Task, click to edit this task\"} onClick={() => {\n                    props.onButtonClick();\n                    props.onPassID(props.id);\n                }}><img src={Edit}\n                        height={\"25\"}\n                        width={\"25\"}\n                        alt={\"edit-icon\"}\n                        className={\"edit\"}\n                /></button>\n            </div>\n        </div>);\n}\n\nexport default Item;\n","import './List.css'\nimport Item from './Item'\n\nfunction List(props) {\n    return (<div className={\"list\"}>\n            {props.todo.map(item =>\n                <Item key={item.id} id={item.id} description={item.description} isCompleted={item.isCompleted}\n                      date={item.creationDate} priority={item.priority} onItemChange={props.onItemChange}\n                      onButtonClick={props.onButtonClick}\n                      onPassID={props.onPassID}/>)}\n        </div>\n    );\n}\n\nexport default List;","import \"./App.css\"\nimport {useState} from \"react\";\n\n\nexport default function AddTask(props) {\n    const [description, setDescription] = useState('');\n    const [priority, setPriority] = useState(\"1\");\n\n    return (\n        <div className={\"center\"} id=\"list\">\n            <input type=\"text\" id=\"task-description\" className={\"taskinput\"} placeholder=\"task description\" value={description}\n                   aria-label={\"Enter the name of your new task here\"}\n                   onChange={(e) =>\n                       setDescription(e.currentTarget.value)}/>\n            <select id=\"priority\" onChange={(e) => setPriority(e.currentTarget.value)}>\n                <option value={1} aria-label={\"High Priority\"}>High</option>\n                <option value={2} aria-label={\"Medium Priority\"}>Medium</option>\n                <option value={3} aria-label={\"Low Priority\"}>Low</option>\n            </select>\n            <input className={\"button\"} type=\"submit\" id=\"submit-task\" value=\"Add Task\"\n                   aria-label={\"Add Task, click to add your new task\"}\n                   onClick={() => {props.onSubmit(description, priority);\n                       setDescription('');}\n                   }/>\n        </div>\n    );\n};","import {useState} from \"react\";\nimport './Alert.css';\n\nfunction Alert(props) {\n    const [newDesc, setNewDesc] = useState(\"\");\n    const [priority, setPriority] = useState(\"1\");\n\n    return (\n        <div className={\"backdrop\"}>\n            { props.type === \"task\" &&\n                <div className=\"modal\">\n                    Enter a new name for your item:\n                    <div className={\"center text\"}>\n                        <input type={\"text\"} tabIndex={0} className={\"enter_description\"} placeholder={\"Enter New Description\"}\n                               aria-label={\"Enter new task name\"}\n                               onChange={(e) => setNewDesc(e.currentTarget.value)}/>\n                        <select className={\"select\"} onChange={(e) => setPriority(e.currentTarget.value)}>\n                            <option value={1} aria-label={\"High Priority\"}>High</option>\n                            <option value={2} aria-label={\"Medium Priority\"}>Medium</option>\n                            <option value={3} aria-label={\"Low Priority\"}>Low</option>\n                        </select>\n                    </div>\n\n                    <div className=\"alert-buttons\">\n                        <button className={\"alert-button\"} type={\"button\"}\n                                onClick={props.onClose}>\n                            Cancel\n                        </button>\n                        <button className={\"alert-button\"} type={\"button\"}\n                                onClick={() => {\n                                    props.onClose();\n                                    props.onOK(newDesc, priority);\n                                }}>\n                            OK\n                        </button>\n                    </div>\n                </div>}\n            { props.type === \"list\" &&\n            <div className=\"modal\">\n                Enter a new name for your list:\n                <div className={\"center text\"}>\n                    <input type={\"text\"} tabIndex={0} className={\"enter_description\"} placeholder={\"Enter New Description\"}\n                           aria-label={\"Enter a new name for your list\"}\n                           onChange={(e) => setNewDesc(e.currentTarget.value)}/>\n                </div>\n\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button\"} type={\"button\"}\n                            onClick={props.onClose}>\n                        Cancel\n                    </button>\n                    <button className={\"alert-button\"} type={\"button\"}\n                            onClick={() => {\n                                props.onClose();\n                                props.onOK(newDesc, props.id);\n                            }}>\n                        OK\n                    </button>\n                </div>\n            </div>}\n        </div>);\n}\n\nexport default Alert;","import {useState} from \"react\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport AddTask from \"./AddTask\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\nconst collectionName = \"List\";\n\nfunction TaskList(props) {\n    const db = props.db;\n    const task = db.collection(collectionName).doc(props.id).collection(props.id);\n    // in usecollection, get everything without the last .doc().\n    // the id is the listID, collection is \"list\", task would be what they input.\n    const [sortVal, setSortVal] = useState(\"priority\")\n    const [value, loading, error] = useCollection(task.orderBy(sortVal, \"asc\"));\n    const [isVisible, setVisibility] = useState(true);\n    const [selectedTaskId, setSelectedTaskId] = useState(\"\");\n\n    let data = [];\n    if (value) {\n        data = value.docs.map((doc) => {\n            return {...doc.data()}\n        });\n    }\n    let selectedTask = data.filter((task) => task.id === selectedTaskId);\n    let taskExists;\n    if (selectedTaskId && selectedTask.length === 0) {\n        taskExists = false;\n    } else {\n        taskExists = true;\n    }\n\n    function addData(description, priority) {\n        const item = {\n            id: generateUniqueID(),\n            description: description,\n            isCompleted: false,\n            creationDate: Date.now(),\n            priority: priority,\n        };\n        const docRef = task.doc(item.id);\n        docRef.set(item);\n    }\n\n    // handles checkboxes\n    function handleItemChange(itemID, field, value) {\n        const doc = task.doc(itemID);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // handles editing an item\n    function handleEditItem(description, priority) {\n        const doc = task.doc(selectedTaskId);\n        doc.update({\n            description: description,\n            priority: priority,\n        })\n        console.log(\"handle edit item called\");\n    }\n\n    function handleDeleteCompleted() {\n        data.forEach((item) => item.isCompleted && task.doc(item.id).delete());\n    }\n\n    function onChangeID(itemID) {\n        console.log(itemID);\n        setSelectedTaskId(itemID);\n    }\n\n    return (\n        <div>\n            <div>\n                <button className={\"button\"} onClick={props.goBack} aria-label={\"Back, click to go back to the overall list page\"}>Back</button>\n                <div className={isVisible ? \"visible\" : null}>\n                    {data.filter((item) => item.isCompleted).length > 0 ?\n                        <button className={\"button\"} type={\"button\"}\n                                onClick={() => {setVisibility(!isVisible);\n                        }}>{isVisible ? \"Hide Completed\" : \"Show Completed\"}</button> : null}\n                    {isVisible && data.filter((item) => item.isCompleted).length > 0 ?\n                        <button className={\"button\"} type={\"button\"} onClick={handleDeleteCompleted}>Delete\n                            Completed</button> : null}\n                </div>\n                <div className={\"sorting\"}>\n                    <label id=\"sort\" htmlFor={\"sort-by\"}>Sort By</label>\n                    <select id={\"sort-by\"} onChange={(e) => setSortVal(e.currentTarget.value)}>\n                        <option value={\"priority\"} aria-label={\"Sort by Priority\"}>Priority</option>\n                        <option value={\"description\"} aria-label={\"Sort by Name\"}>Name</option>\n                        <option value={\"creationDate\"} aria-label={\"Sort by Creation Date\"}>Creation Date</option>\n                    </select>\n                </div>\n                <AddTask data={data} onSubmit={addData}/>\n                {data && <List todo={isVisible ? data : data.filter(item => !(item.isCompleted))}\n                               onItemChange={handleItemChange} onButtonClick={props.toggleModal} onPassID={onChangeID}/>}\n            </div>\n            {props.showAlert && taskExists && <Alert type={\"task\"} task={selectedTask} onClose={props.toggleModal} onOK={handleEditItem}/>}\n        </div>\n    );\n}\n\nexport default TaskList;","import \"./App.css\"\nimport {useState} from \"react\";\nimport TaskList from \"./TaskList\";\n\n\nfunction AddCategory(props) {\n    const [category, setCategory] = useState('');\n\n    return (\n        <div className={\"center\"} id={\"list\"}>\n            <label id=\"sort\">Enter List Name: </label>\n            <input type=\"text\" id=\"task-description\" className={\"taskinput\"} placeholder=\"type list name\" aria-label={\"type the name of your new list\"} value={category}\n                   onChange={(e) => setCategory(e.currentTarget.value)}/>\n            <input className={\"button\"} type={\"button\"} value={\"Add List\"} aria-label={\"Add List button\"} onClick={() => {props.onSubmit(category); setCategory(\"\")}}/>\n        </div>\n    );\n}\n\nexport default AddCategory;\n","export default __webpack_public_path__ + \"static/media/trash_can.3f7ee860.png\";","import Edit from \"./edit_pencil.png\";\nimport Delete from \"./trash_can.png\";\nimport Alert from \"./Alert\";\n\n\n\nfunction ListItem(props) {\n\n    console.log('rendering new list item');\n\n    return (\n        <div className={\"item\"} >\n            <button className={\"listButton\"} htmlFor={props.id} value={props.listName}\n                    aria-label={props.listName + \" List, click to view this list\"}\n                   onClick={() => props.onClickItem(props.listName, props.id)}>{props.listName}</button>\n            <button className={\"editButton\"} aria-label={\"Edit List Name, click to edit the name of this list\"}\n                    onClick={() => {props.setAlertId(props.id); props.toggleModal()}}><img\n                src={Edit} height={\"25\"} width={\"25\"} alt={\"edit-icon\"} className={\"edit\"}/></button>\n            <button className={\"deleteButton\"} id={props.id} aria-label={\"Delete List, click to delete this list\"}\n                    onClick={() => props.handleDeleteList(props.id)}><img src={Delete} height={\"25\"} width={\"25\"}\n                                                                          alt={\"delete-icon\"} className={\"edit\"}/>\n            </button>\n        </div>\n\n    );\n\n}\n\nexport default ListItem;","import List from './List'\nimport './App.css';\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport AddTask from \"./AddTask\";\nimport AddCategory from \"./AddCategory\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport ListItem from \"./ListItem\";\nimport Edit from \"./edit_pencil.png\";\nimport TaskList from \"./TaskList\";\nimport Alert from \"./Alert\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDcjlwvBtxAl8BKu_8evho99ks_6MBiWZo\",\n    authDomain: \"nskr-124lab4.firebaseapp.com\",\n    projectId: \"nskr-124lab4\",\n    storageBucket: \"nskr-124lab4.appspot.com\",\n    messagingSenderId: \"613050589081\",\n    appId: \"1:613050589081:web:d234d16f271e4ebe1ffd08\",\n    measurementId: \"G-6XSHMJM1HG\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nconst collectionName = \"List\";\n\n// Need to add functionalities for multiple list and support for mobile/desktop/portrait, landscape\n\n// tabs for multiple lists (categories)\n// different collectionNames according to categories\n// all other functionalities are the same\n\nfunction App() {\n    const query = db.collection(collectionName);\n    const [value, loading, error] = useCollection(query);\n    const [listId, setListId] = useState(\"\");\n    const [page, setPage] = useState(\"home\");\n    const [showAlert, setShowAlert] = useState(false);\n    const [alertId, setAlertId] = useState(null);\n\n    let data = [];\n    if (value) {\n        data = value.docs.map((doc) => {\n            return {...doc.data()}\n        });\n    }\n\n    let listExists;\n    if (alertId && data.filter((task) => task.id === alertId).length === 0) {\n        listExists = false;\n    } else {\n        listExists = true;\n    }\n\n    function addData(list) {\n        const item = {\n            id: generateUniqueID(),\n            listName: list,\n        };\n        const docRef = query.doc(item.id);\n        docRef.set(item);\n    }\n\n    function handleEditList(list, id) {\n        const doc = db.collection(collectionName).doc(id);\n        doc.update({\n            listName: list,\n        })\n    }\n\n    function handleDeleteList(id) {\n       db.collection(collectionName).doc(id).delete();\n    }\n\n    function changeList(listName, id) {\n        setListId(id);\n        setPage(listName);\n    }\n\n\n    function toggleModal() {\n        setShowAlert(!showAlert);\n    }\n\n    return (\n        <div className={\"todo\"}>\n\n            {page === \"home\" ?\n                <div>\n                    <h1>TO-DO LIST</h1>\n                    <AddCategory onSubmit={addData}/>\n                    {data.map(item =>\n                        <div>\n                            <ListItem listName={item.listName} onClickItem={changeList}\n                                      handleDeleteList={handleDeleteList} toggleModal={toggleModal}\n                                      id={item.id} showAlert={showAlert}\n                                      setAlertId={setAlertId}\n                            />\n\n                        </div>)}\n                </div>\n                :\n                <div>\n                    <h1>{page}</h1>\n                    <TaskList listName={page} db={db} goBack={() => setPage(\"home\")} id={listId}\n                                toggleModal={toggleModal} modalType={\"task\"} showAlert={showAlert}\n                    />\n                </div>}\n            {page === \"home\" && showAlert && listExists && <Alert onClose={toggleModal} onOK={handleEditList} type={\"list\"} id={alertId}/>}\n        </div>\n)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}